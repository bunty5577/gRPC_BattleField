# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import soldier_pb2 as soldier__pb2


class SoldierServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitializeSoldiers = channel.unary_unary(
                '/SoldierService/InitializeSoldiers',
                request_serializer=soldier__pb2.SoldierListRequest.SerializeToString,
                response_deserializer=soldier__pb2.SoldierList.FromString,
                )
        self.IssueCommand = channel.unary_unary(
                '/SoldierService/IssueCommand',
                request_serializer=soldier__pb2.CommandRequest.SerializeToString,
                response_deserializer=soldier__pb2.CommandResponse.FromString,
                )
        self.LaunchMissile = channel.unary_stream(
                '/SoldierService/LaunchMissile',
                request_serializer=soldier__pb2.LaunchMissileRequest.SerializeToString,
                response_deserializer=soldier__pb2.MissileStrike.FromString,
                )
        self.NotifyThreat = channel.unary_unary(
                '/SoldierService/NotifyThreat',
                request_serializer=soldier__pb2.ThreatNotification.SerializeToString,
                response_deserializer=soldier__pb2.CommandResponse.FromString,
                )
        self.UpdateSoldierPosition = channel.unary_unary(
                '/SoldierService/UpdateSoldierPosition',
                request_serializer=soldier__pb2.UpdateSoldierPositionRequest.SerializeToString,
                response_deserializer=soldier__pb2.CommandResponse.FromString,
                )
        self.CheckBattleResult = channel.unary_unary(
                '/SoldierService/CheckBattleResult',
                request_serializer=soldier__pb2.CheckBattleResultRequest.SerializeToString,
                response_deserializer=soldier__pb2.BattleResult.FromString,
                )
        self.MissileNotification = channel.unary_unary(
                '/SoldierService/MissileNotification',
                request_serializer=soldier__pb2.Missile.SerializeToString,
                response_deserializer=soldier__pb2.CommandResponse.FromString,
                )


class SoldierServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitializeSoldiers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IssueCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LaunchMissile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyThreat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSoldierPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckBattleResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MissileNotification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SoldierServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitializeSoldiers': grpc.unary_unary_rpc_method_handler(
                    servicer.InitializeSoldiers,
                    request_deserializer=soldier__pb2.SoldierListRequest.FromString,
                    response_serializer=soldier__pb2.SoldierList.SerializeToString,
            ),
            'IssueCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.IssueCommand,
                    request_deserializer=soldier__pb2.CommandRequest.FromString,
                    response_serializer=soldier__pb2.CommandResponse.SerializeToString,
            ),
            'LaunchMissile': grpc.unary_stream_rpc_method_handler(
                    servicer.LaunchMissile,
                    request_deserializer=soldier__pb2.LaunchMissileRequest.FromString,
                    response_serializer=soldier__pb2.MissileStrike.SerializeToString,
            ),
            'NotifyThreat': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyThreat,
                    request_deserializer=soldier__pb2.ThreatNotification.FromString,
                    response_serializer=soldier__pb2.CommandResponse.SerializeToString,
            ),
            'UpdateSoldierPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSoldierPosition,
                    request_deserializer=soldier__pb2.UpdateSoldierPositionRequest.FromString,
                    response_serializer=soldier__pb2.CommandResponse.SerializeToString,
            ),
            'CheckBattleResult': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckBattleResult,
                    request_deserializer=soldier__pb2.CheckBattleResultRequest.FromString,
                    response_serializer=soldier__pb2.BattleResult.SerializeToString,
            ),
            'MissileNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.MissileNotification,
                    request_deserializer=soldier__pb2.Missile.FromString,
                    response_serializer=soldier__pb2.CommandResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SoldierService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SoldierService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitializeSoldiers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SoldierService/InitializeSoldiers',
            soldier__pb2.SoldierListRequest.SerializeToString,
            soldier__pb2.SoldierList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IssueCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SoldierService/IssueCommand',
            soldier__pb2.CommandRequest.SerializeToString,
            soldier__pb2.CommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LaunchMissile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/SoldierService/LaunchMissile',
            soldier__pb2.LaunchMissileRequest.SerializeToString,
            soldier__pb2.MissileStrike.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyThreat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SoldierService/NotifyThreat',
            soldier__pb2.ThreatNotification.SerializeToString,
            soldier__pb2.CommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSoldierPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SoldierService/UpdateSoldierPosition',
            soldier__pb2.UpdateSoldierPositionRequest.SerializeToString,
            soldier__pb2.CommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckBattleResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SoldierService/CheckBattleResult',
            soldier__pb2.CheckBattleResultRequest.SerializeToString,
            soldier__pb2.BattleResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MissileNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SoldierService/MissileNotification',
            soldier__pb2.Missile.SerializeToString,
            soldier__pb2.CommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
